"""
Test cases for the text_indentation function in the 5-text_indentation module.
"""

# Importing the function from the module
text_indentation = __import__('5-text_indentation').text_indentation

# Printing a large message
text_indentation("""Lorem ipsum dolor sit amet, consectetur adipiscing elit. Quonam modo? Utrum igitur tibi litteram videor an totas paginas commovere? Non autem hoc: igitur ne illud quidem. Fortasse id optimum, sed ubi illud: Plus semper voluptatis? Teneo, inquit, finem illi videri nihil dolere. Transfer idem ad modestiam vel temperantiam, quae est moderatio cupiditatum rationi oboediens. Si id dicis, vicimus. Inde sermone vario sex illa a Dipylo stadia confecimus. Sin aliud quid voles, postea. Quae animi affectio suum cuique tribuens atque hanc, quam dico. Utinam quidem dicerent alium alio beatiorem! Iam ruinas videres""")

# Printing a word with spaces around
text_indentation("    Holberton    ")

# Printing all special characters
text_indentation(".?:")

# Passing None as a text
try:
    text_indentation(None)
except TypeError:
    pass
else:
    raise AssertionError("Expected TypeError")

# Passing a number as a text
try:
    text_indentation(10)
except TypeError:
    pass
else:
    raise AssertionError("Expected TypeError")

# Printing a text with special characters
text_indentation("Betty: Holberton? Python is. cool   ")

# Printing a char number
text_indentation('2')

# Passing an empty string
text_indentation('    ')

# Passing a new line as a text
text_indentation('\n')

# Passing a special character and some special characters
text_indentation('\n.\n?\n:')

# Passing a text with spaces and one new line
text_indentation("   \n")

# Passing a text with spaces and one new line 2
text_indentation("   \n   ")

# Passing a text with spaces and one new line 3
text_indentation("\n   ")
